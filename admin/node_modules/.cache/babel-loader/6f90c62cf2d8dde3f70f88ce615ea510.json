{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/\";\nlet TOKEN = null;\nconst persistRoot = localStorage.getItem(\"persist:root\");\nif (persistRoot) {\n  try {\n    const userState = JSON.parse(persistRoot).user;\n    if (userState) {\n      const currentUser = JSON.parse(userState).currentUser;\n      if (currentUser) {\n        TOKEN = currentUser.accessToken;\n      }\n    }\n  } catch (error) {\n    console.error(\"Error parsing localStorage data:\", error);\n  }\n}\nconsole.log(\"Token:\", TOKEN);\nexport const publicRequest = axios.create({\n  baseURL: BASE_URL\n});\nconst userRequest = axios.create({\n  baseURL: BASE_URL\n});\nif (TOKEN) {\n  userRequest.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${TOKEN}`;\n    console.log(\"Request Headers:\", config.headers);\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n}\nexport { userRequest };","map":{"version":3,"names":["axios","BASE_URL","TOKEN","persistRoot","localStorage","getItem","userState","JSON","parse","user","currentUser","accessToken","error","console","log","publicRequest","create","baseURL","userRequest","interceptors","request","use","config","headers","Authorization","Promise","reject"],"sources":["C:/Users/mahuthu/Desktop/mlbnewera/admin/src/requestMethods.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/\";\r\n\r\nlet TOKEN = null;\r\n\r\nconst persistRoot = localStorage.getItem(\"persist:root\");\r\nif (persistRoot) {\r\n  try {\r\n    const userState = JSON.parse(persistRoot).user;\r\n    if (userState) {\r\n      const currentUser = JSON.parse(userState).currentUser;\r\n      if (currentUser) {\r\n        TOKEN = currentUser.accessToken;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error parsing localStorage data:\", error);\r\n  }\r\n}\r\n\r\nconsole.log(\"Token:\", TOKEN);\r\n\r\nexport const publicRequest = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nconst userRequest = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nif (TOKEN) {\r\n  userRequest.interceptors.request.use(\r\n    (config) => {\r\n      config.headers.Authorization = `Bearer ${TOKEN}`;\r\n      console.log(\"Request Headers:\", config.headers);\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nexport { userRequest };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,IAAIC,KAAK,GAAG,IAAI;AAEhB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AACxD,IAAIF,WAAW,EAAE;EACf,IAAI;IACF,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAACM,IAAI;IAC9C,IAAIH,SAAS,EAAE;MACb,MAAMI,WAAW,GAAGH,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,CAACI,WAAW;MACrD,IAAIA,WAAW,EAAE;QACfR,KAAK,GAAGQ,WAAW,CAACC,WAAW;MACjC;IACF;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D;AACF;AAEAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEZ,KAAK,CAAC;AAE5B,OAAO,MAAMa,aAAa,GAAGf,KAAK,CAACgB,MAAM,CAAC;EACxCC,OAAO,EAAEhB;AACX,CAAC,CAAC;AAEF,MAAMiB,WAAW,GAAGlB,KAAK,CAACgB,MAAM,CAAC;EAC/BC,OAAO,EAAEhB;AACX,CAAC,CAAC;AAEF,IAAIC,KAAK,EAAE;EACTgB,WAAW,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;IACVA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUtB,KAAK,EAAE;IAChDW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,MAAM,CAACC,OAAO,CAAC;IAC/C,OAAOD,MAAM;EACf,CAAC,EACAV,KAAK,IAAK;IACT,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;EAC9B,CACF,CAAC;AACH;AAEA,SAASM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}