{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahuthu\\\\Desktop\\\\mlbnewera\\\\admin\\\\src\\\\pages\\\\userList\\\\UserList.jsx\",\n  _s = $RefreshSig$();\nimport \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUsers, getUsers } from \"../../redux/apiCalls\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.user.users);\n  useEffect(() => {\n    getUsers(dispatch);\n  }, [dispatch]);\n  const handleDelete = id => {\n    deleteUsers(id, dispatch);\n  };\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  },\n  // Changed to \"id\"\n  {\n    field: \"user\",\n    headerName: \"User\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), params.row.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200\n  }, {\n    field: \"isAdmin\",\n    headerName: \"Admin\",\n    width: 120\n  }, {\n    field: \"transaction\",\n    headerName: \"Transaction Volume\",\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + params.row.id,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(params.row.id) // Changed to \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n\n  // Map users to include an id field\n  const rows = users.map(user => ({\n    id: user._id,\n    // Mapping _id to id\n    username: user.username,\n    email: user.email,\n    isAdmin: user.isAdmin,\n    avatar: user.avatar,\n    // Ensure this field exists in your user data\n    transaction: user.transaction // Ensure this field exists in your user data\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: [console.log(\"DataGrid rows:\", rows), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"4X33Gq5WNquvmpYNZCa4A/J7s1c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["DataGrid","DeleteOutline","Link","useEffect","useDispatch","useSelector","deleteUsers","getUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","_s","dispatch","users","state","user","handleDelete","id","columns","field","headerName","width","renderCell","params","className","children","src","row","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","to","onClick","rows","map","_id","email","isAdmin","transaction","console","log","disableSelectionOnClick","pageSize","checkboxSelection","_c","$RefreshReg$"],"sources":["C:/Users/mahuthu/Desktop/mlbnewera/admin/src/pages/userList/UserList.jsx"],"sourcesContent":["import \"./userList.css\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteUsers, getUsers } from \"../../redux/apiCalls\";\r\n\r\nexport default function UserList() {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users);\r\n\r\n  useEffect(() => {\r\n    getUsers(dispatch);\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = (id) => {\r\n    deleteUsers(id, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 90 }, // Changed to \"id\"\r\n    {\r\n      field: \"user\",\r\n      headerName: \"User\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"userListUser\">\r\n            <img className=\"userListImg\" src={params.row.avatar} alt=\"\" />\r\n            {params.row.username}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: \"email\", headerName: \"Email\", width: 200 },\r\n    { field: \"isAdmin\", headerName: \"Admin\", width: 120 },\r\n    { field: \"transaction\", headerName: \"Transaction Volume\", width: 160 },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={\"/user/\" + params.row.id}> {/* Changed to \"id\" */}\r\n              <button className=\"userListEdit\">Edit</button>\r\n            </Link>\r\n            <DeleteOutline\r\n              className=\"userListDelete\"\r\n              onClick={() => handleDelete(params.row.id)} // Changed to \"id\"\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Map users to include an id field\r\n  const rows = users.map((user) => ({\r\n    id: user._id, // Mapping _id to id\r\n    username: user.username,\r\n    email: user.email,\r\n    isAdmin: user.isAdmin,\r\n    avatar: user.avatar, // Ensure this field exists in your user data\r\n    transaction: user.transaction, // Ensure this field exists in your user data\r\n  }));\r\n\r\n  return (\r\n    <div className=\"userList\">\r\n      {console.log(\"DataGrid rows:\", rows)}\r\n      <DataGrid\r\n        rows={rows}\r\n        disableSelectionOnClick\r\n        columns={columns}\r\n        pageSize={8}\r\n        checkboxSelection\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}